// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: protos/model/v1/config.proto

package model

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TeleopMode int32

const (
	TeleopMode_COMMAND TeleopMode = 0
	TeleopMode_OBSERVE TeleopMode = 1
)

// Enum value maps for TeleopMode.
var (
	TeleopMode_name = map[int32]string{
		0: "COMMAND",
		1: "OBSERVE",
	}
	TeleopMode_value = map[string]int32{
		"COMMAND": 0,
		"OBSERVE": 1,
	}
)

func (x TeleopMode) Enum() *TeleopMode {
	p := new(TeleopMode)
	*p = x
	return p
}

func (x TeleopMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TeleopMode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_model_v1_config_proto_enumTypes[0].Descriptor()
}

func (TeleopMode) Type() protoreflect.EnumType {
	return &file_protos_model_v1_config_proto_enumTypes[0]
}

func (x TeleopMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TeleopMode.Descriptor instead.
func (TeleopMode) EnumDescriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{0}
}

type FileFormat int32

const (
	FileFormat_PLAIN_TEXT FileFormat = 0
	FileFormat_JSON       FileFormat = 1
)

// Enum value maps for FileFormat.
var (
	FileFormat_name = map[int32]string{
		0: "PLAIN_TEXT",
		1: "JSON",
	}
	FileFormat_value = map[string]int32{
		"PLAIN_TEXT": 0,
		"JSON":       1,
	}
)

func (x FileFormat) Enum() *FileFormat {
	p := new(FileFormat)
	*p = x
	return p
}

func (x FileFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_model_v1_config_proto_enumTypes[1].Descriptor()
}

func (FileFormat) Type() protoreflect.EnumType {
	return &file_protos_model_v1_config_proto_enumTypes[1]
}

func (x FileFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileFormat.Descriptor instead.
func (FileFormat) EnumDescriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{1}
}

type FileType int32

const (
	FileType_FILE        FileType = 0
	FileType_IMAGE       FileType = 1
	FileType_POINT_CLOUD FileType = 4
	FileType_VIDEO       FileType = 5
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "FILE",
		1: "IMAGE",
		4: "POINT_CLOUD",
		5: "VIDEO",
	}
	FileType_value = map[string]int32{
		"FILE":        0,
		"IMAGE":       1,
		"POINT_CLOUD": 4,
		"VIDEO":       5,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_model_v1_config_proto_enumTypes[2].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_protos_model_v1_config_proto_enumTypes[2]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{2}
}

type AgentConfigurationStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentVersion  string `protobuf:"bytes,1,opt,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`
	Configuration string `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
	FeatureSet    string `protobuf:"bytes,3,opt,name=feature_set,json=featureSet,proto3" json:"feature_set,omitempty"`
}

func (x *AgentConfigurationStore) Reset() {
	*x = AgentConfigurationStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentConfigurationStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentConfigurationStore) ProtoMessage() {}

func (x *AgentConfigurationStore) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentConfigurationStore.ProtoReflect.Descriptor instead.
func (*AgentConfigurationStore) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{0}
}

func (x *AgentConfigurationStore) GetAgentVersion() string {
	if x != nil {
		return x.AgentVersion
	}
	return ""
}

func (x *AgentConfigurationStore) GetConfiguration() string {
	if x != nil {
		return x.Configuration
	}
	return ""
}

func (x *AgentConfigurationStore) GetFeatureSet() string {
	if x != nil {
		return x.FeatureSet
	}
	return ""
}

type AgentFeatureSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Telemetry bool `protobuf:"varint,1,opt,name=telemetry,proto3" json:"telemetry,omitempty"`
	Teleop    bool `protobuf:"varint,2,opt,name=teleop,proto3" json:"teleop,omitempty"`
}

func (x *AgentFeatureSet) Reset() {
	*x = AgentFeatureSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentFeatureSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentFeatureSet) ProtoMessage() {}

func (x *AgentFeatureSet) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentFeatureSet.ProtoReflect.Descriptor instead.
func (*AgentFeatureSet) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{1}
}

func (x *AgentFeatureSet) GetTelemetry() bool {
	if x != nil {
		return x.Telemetry
	}
	return false
}

func (x *AgentFeatureSet) GetTeleop() bool {
	if x != nil {
		return x.Teleop
	}
	return false
}

type AgentConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Document *AgentConfigurationDocument `protobuf:"bytes,3,opt,name=document,proto3" json:"document,omitempty"`
}

func (x *AgentConfiguration) Reset() {
	*x = AgentConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentConfiguration) ProtoMessage() {}

func (x *AgentConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentConfiguration.ProtoReflect.Descriptor instead.
func (*AgentConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{2}
}

func (x *AgentConfiguration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentConfiguration) GetDocument() *AgentConfigurationDocument {
	if x != nil {
		return x.Document
	}
	return nil
}

type AgentConfigurationDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   int64                   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Tags      map[string]string       `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Telemetry *TelemetryConfiguration `protobuf:"bytes,3,opt,name=telemetry,proto3" json:"telemetry,omitempty"`
	Teleop    *TeleopConfiguration    `protobuf:"bytes,4,opt,name=teleop,proto3" json:"teleop,omitempty"`
}

func (x *AgentConfigurationDocument) Reset() {
	*x = AgentConfigurationDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentConfigurationDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentConfigurationDocument) ProtoMessage() {}

func (x *AgentConfigurationDocument) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentConfigurationDocument.ProtoReflect.Descriptor instead.
func (*AgentConfigurationDocument) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{3}
}

func (x *AgentConfigurationDocument) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *AgentConfigurationDocument) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AgentConfigurationDocument) GetTelemetry() *TelemetryConfiguration {
	if x != nil {
		return x.Telemetry
	}
	return nil
}

func (x *AgentConfigurationDocument) GetTeleop() *TeleopConfiguration {
	if x != nil {
		return x.Teleop
	}
	return nil
}

type AdapterConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FileId      string `protobuf:"bytes,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	ExecCommand string `protobuf:"bytes,4,opt,name=exec_command,json=execCommand,proto3" json:"exec_command,omitempty"`
}

func (x *AdapterConfiguration) Reset() {
	*x = AdapterConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdapterConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdapterConfiguration) ProtoMessage() {}

func (x *AdapterConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdapterConfiguration.ProtoReflect.Descriptor instead.
func (*AdapterConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{4}
}

func (x *AdapterConfiguration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdapterConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdapterConfiguration) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *AdapterConfiguration) GetExecCommand() string {
	if x != nil {
		return x.ExecCommand
	}
	return ""
}

type TeleopConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmdVelTopic     string                               `protobuf:"bytes,1,opt,name=cmd_vel_topic,json=cmdVelTopic,proto3" json:"cmd_vel_topic,omitempty"`
	RosStreams      []*TeleopRosStreamConfiguration      `protobuf:"bytes,2,rep,name=ros_streams,json=rosStreams,proto3" json:"ros_streams,omitempty"`
	HardwareStreams []*TeleopHardwareStreamConfiguration `protobuf:"bytes,3,rep,name=hardware_streams,json=hardwareStreams,proto3" json:"hardware_streams,omitempty"`
}

func (x *TeleopConfiguration) Reset() {
	*x = TeleopConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeleopConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeleopConfiguration) ProtoMessage() {}

func (x *TeleopConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeleopConfiguration.ProtoReflect.Descriptor instead.
func (*TeleopConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{5}
}

func (x *TeleopConfiguration) GetCmdVelTopic() string {
	if x != nil {
		return x.CmdVelTopic
	}
	return ""
}

func (x *TeleopConfiguration) GetRosStreams() []*TeleopRosStreamConfiguration {
	if x != nil {
		return x.RosStreams
	}
	return nil
}

func (x *TeleopConfiguration) GetHardwareStreams() []*TeleopHardwareStreamConfiguration {
	if x != nil {
		return x.HardwareStreams
	}
	return nil
}

type PortForwardingConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *PortForwardingConfiguration) Reset() {
	*x = PortForwardingConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortForwardingConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortForwardingConfiguration) ProtoMessage() {}

func (x *PortForwardingConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortForwardingConfiguration.ProtoReflect.Descriptor instead.
func (*PortForwardingConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{6}
}

func (x *PortForwardingConfiguration) GetEnabled() *wrappers.BoolValue {
	if x != nil {
		return x.Enabled
	}
	return nil
}

type TeleopRosStreamConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicName          string       `protobuf:"bytes,1,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	TopicType          ROSTopicType `protobuf:"varint,2,opt,name=topic_type,json=topicType,proto3,enum=v1.model.ROSTopicType" json:"topic_type,omitempty"`
	Mode               TeleopMode   `protobuf:"varint,3,opt,name=mode,proto3,enum=v1.model.TeleopMode" json:"mode,omitempty"`
	EncodeVideo        bool         `protobuf:"varint,4,opt,name=encode_video,json=encodeVideo,proto3" json:"encode_video,omitempty"`
	AudioCodec         string       `protobuf:"bytes,5,opt,name=audio_codec,json=audioCodec,proto3" json:"audio_codec,omitempty"`
	Quality            string       `protobuf:"bytes,6,opt,name=quality,proto3" json:"quality,omitempty"`
	BaseReferenceFrame string       `protobuf:"bytes,7,opt,name=base_reference_frame,json=baseReferenceFrame,proto3" json:"base_reference_frame,omitempty"`
	LocalFrame         string       `protobuf:"bytes,8,opt,name=local_frame,json=localFrame,proto3" json:"local_frame,omitempty"`
}

func (x *TeleopRosStreamConfiguration) Reset() {
	*x = TeleopRosStreamConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeleopRosStreamConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeleopRosStreamConfiguration) ProtoMessage() {}

func (x *TeleopRosStreamConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeleopRosStreamConfiguration.ProtoReflect.Descriptor instead.
func (*TeleopRosStreamConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{7}
}

func (x *TeleopRosStreamConfiguration) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *TeleopRosStreamConfiguration) GetTopicType() ROSTopicType {
	if x != nil {
		return x.TopicType
	}
	return ROSTopicType_UNKNOWN
}

func (x *TeleopRosStreamConfiguration) GetMode() TeleopMode {
	if x != nil {
		return x.Mode
	}
	return TeleopMode_COMMAND
}

func (x *TeleopRosStreamConfiguration) GetEncodeVideo() bool {
	if x != nil {
		return x.EncodeVideo
	}
	return false
}

func (x *TeleopRosStreamConfiguration) GetAudioCodec() string {
	if x != nil {
		return x.AudioCodec
	}
	return ""
}

func (x *TeleopRosStreamConfiguration) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

func (x *TeleopRosStreamConfiguration) GetBaseReferenceFrame() string {
	if x != nil {
		return x.BaseReferenceFrame
	}
	return ""
}

func (x *TeleopRosStreamConfiguration) GetLocalFrame() string {
	if x != nil {
		return x.LocalFrame
	}
	return ""
}

type TeleopHardwareStreamConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RtcStreamType      string     `protobuf:"bytes,2,opt,name=rtc_stream_type,json=rtcStreamType,proto3" json:"rtc_stream_type,omitempty"`
	Mode               TeleopMode `protobuf:"varint,3,opt,name=mode,proto3,enum=v1.model.TeleopMode" json:"mode,omitempty"`
	HwDescriptor       string     `protobuf:"bytes,4,opt,name=hw_descriptor,json=hwDescriptor,proto3" json:"hw_descriptor,omitempty"`
	Quality            string     `protobuf:"bytes,5,opt,name=quality,proto3" json:"quality,omitempty"`
	HardwareType       string     `protobuf:"bytes,6,opt,name=hardware_type,json=hardwareType,proto3" json:"hardware_type,omitempty"`
	RtspEncodingNeeded bool       `protobuf:"varint,7,opt,name=rtsp_encoding_needed,json=rtspEncodingNeeded,proto3" json:"rtsp_encoding_needed,omitempty"`
	IsOnvif            bool       `protobuf:"varint,8,opt,name=is_onvif,json=isOnvif,proto3" json:"is_onvif,omitempty"`
	IpCamUrl           string     `protobuf:"bytes,9,opt,name=ip_cam_url,json=ipCamUrl,proto3" json:"ip_cam_url,omitempty"`
}

func (x *TeleopHardwareStreamConfiguration) Reset() {
	*x = TeleopHardwareStreamConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeleopHardwareStreamConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeleopHardwareStreamConfiguration) ProtoMessage() {}

func (x *TeleopHardwareStreamConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeleopHardwareStreamConfiguration.ProtoReflect.Descriptor instead.
func (*TeleopHardwareStreamConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{8}
}

func (x *TeleopHardwareStreamConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeleopHardwareStreamConfiguration) GetRtcStreamType() string {
	if x != nil {
		return x.RtcStreamType
	}
	return ""
}

func (x *TeleopHardwareStreamConfiguration) GetMode() TeleopMode {
	if x != nil {
		return x.Mode
	}
	return TeleopMode_COMMAND
}

func (x *TeleopHardwareStreamConfiguration) GetHwDescriptor() string {
	if x != nil {
		return x.HwDescriptor
	}
	return ""
}

func (x *TeleopHardwareStreamConfiguration) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

func (x *TeleopHardwareStreamConfiguration) GetHardwareType() string {
	if x != nil {
		return x.HardwareType
	}
	return ""
}

func (x *TeleopHardwareStreamConfiguration) GetRtspEncodingNeeded() bool {
	if x != nil {
		return x.RtspEncodingNeeded
	}
	return false
}

func (x *TeleopHardwareStreamConfiguration) GetIsOnvif() bool {
	if x != nil {
		return x.IsOnvif
	}
	return false
}

func (x *TeleopHardwareStreamConfiguration) GetIpCamUrl() string {
	if x != nil {
		return x.IpCamUrl
	}
	return ""
}

type TeleopCustomStreamConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RtcStreamType string     `protobuf:"bytes,2,opt,name=rtc_stream_type,json=rtcStreamType,proto3" json:"rtc_stream_type,omitempty"`
	Mode          TeleopMode `protobuf:"varint,3,opt,name=mode,proto3,enum=v1.model.TeleopMode" json:"mode,omitempty"`
	EncodeVideo   bool       `protobuf:"varint,4,opt,name=encode_video,json=encodeVideo,proto3" json:"encode_video,omitempty"`
	Quality       string     `protobuf:"bytes,5,opt,name=quality,proto3" json:"quality,omitempty"`
}

func (x *TeleopCustomStreamConfiguration) Reset() {
	*x = TeleopCustomStreamConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeleopCustomStreamConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeleopCustomStreamConfiguration) ProtoMessage() {}

func (x *TeleopCustomStreamConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeleopCustomStreamConfiguration.ProtoReflect.Descriptor instead.
func (*TeleopCustomStreamConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{9}
}

func (x *TeleopCustomStreamConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeleopCustomStreamConfiguration) GetRtcStreamType() string {
	if x != nil {
		return x.RtcStreamType
	}
	return ""
}

func (x *TeleopCustomStreamConfiguration) GetMode() TeleopMode {
	if x != nil {
		return x.Mode
	}
	return TeleopMode_COMMAND
}

func (x *TeleopCustomStreamConfiguration) GetEncodeVideo() bool {
	if x != nil {
		return x.EncodeVideo
	}
	return false
}

func (x *TeleopCustomStreamConfiguration) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

type TelemetryConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Streams []*StreamConfiguration `protobuf:"bytes,1,rep,name=streams,proto3" json:"streams,omitempty"`
	Ros     *ROSConfiguration      `protobuf:"bytes,2,opt,name=ros,proto3" json:"ros,omitempty"`
}

func (x *TelemetryConfiguration) Reset() {
	*x = TelemetryConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetryConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryConfiguration) ProtoMessage() {}

func (x *TelemetryConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryConfiguration.ProtoReflect.Descriptor instead.
func (*TelemetryConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{10}
}

func (x *TelemetryConfiguration) GetStreams() []*StreamConfiguration {
	if x != nil {
		return x.Streams
	}
	return nil
}

func (x *TelemetryConfiguration) GetRos() *ROSConfiguration {
	if x != nil {
		return x.Ros
	}
	return nil
}

type ApplicationConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigurationMap map[string]string `protobuf:"bytes,1,rep,name=configuration_map,json=configurationMap,proto3" json:"configuration_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ApplicationConfiguration) Reset() {
	*x = ApplicationConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationConfiguration) ProtoMessage() {}

func (x *ApplicationConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationConfiguration.ProtoReflect.Descriptor instead.
func (*ApplicationConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{11}
}

func (x *ApplicationConfiguration) GetConfigurationMap() map[string]string {
	if x != nil {
		return x.ConfigurationMap
	}
	return nil
}

type ResourcesConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disk             *DiskConfiguration    `protobuf:"bytes,1,opt,name=disk,proto3" json:"disk,omitempty"`
	StreamThrottleHz *wrappers.DoubleValue `protobuf:"bytes,2,opt,name=stream_throttle_hz,json=streamThrottleHz,proto3" json:"stream_throttle_hz,omitempty"`
}

func (x *ResourcesConfiguration) Reset() {
	*x = ResourcesConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcesConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesConfiguration) ProtoMessage() {}

func (x *ResourcesConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesConfiguration.ProtoReflect.Descriptor instead.
func (*ResourcesConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{12}
}

func (x *ResourcesConfiguration) GetDisk() *DiskConfiguration {
	if x != nil {
		return x.Disk
	}
	return nil
}

func (x *ResourcesConfiguration) GetStreamThrottleHz() *wrappers.DoubleValue {
	if x != nil {
		return x.StreamThrottleHz
	}
	return nil
}

type DiskConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// size of the datapoints on-disk buffer. default is 100MB, max is 50GB
	BufferSize int64 `protobuf:"varint,1,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
	// size of the datapoints on-disk on-demand buffer. default is 0, max is 50GB
	OnDemandBufferSize int64 `protobuf:"varint,2,opt,name=on_demand_buffer_size,json=onDemandBufferSize,proto3" json:"on_demand_buffer_size,omitempty"`
}

func (x *DiskConfiguration) Reset() {
	*x = DiskConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskConfiguration) ProtoMessage() {}

func (x *DiskConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskConfiguration.ProtoReflect.Descriptor instead.
func (*DiskConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{13}
}

func (x *DiskConfiguration) GetBufferSize() int64 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

func (x *DiskConfiguration) GetOnDemandBufferSize() int64 {
	if x != nil {
		return x.OnDemandBufferSize
	}
	return 0
}

type ROSConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorldReferenceFrameId string `protobuf:"bytes,1,opt,name=world_reference_frame_id,json=worldReferenceFrameId,proto3" json:"world_reference_frame_id,omitempty"`
}

func (x *ROSConfiguration) Reset() {
	*x = ROSConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ROSConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ROSConfiguration) ProtoMessage() {}

func (x *ROSConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ROSConfiguration.ProtoReflect.Descriptor instead.
func (*ROSConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{14}
}

func (x *ROSConfiguration) GetWorldReferenceFrameId() string {
	if x != nil {
		return x.WorldReferenceFrameId
	}
	return ""
}

type StreamConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tags map[string]string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to Configuration:
	//
	//	*StreamConfiguration_RosTopic
	//	*StreamConfiguration_RosLocalization
	//	*StreamConfiguration_DirectoryWatch
	//	*StreamConfiguration_FileTail
	//	*StreamConfiguration_RosTransformTree
	//	*StreamConfiguration_Custom
	//	*StreamConfiguration_Hardware
	Configuration isStreamConfiguration_Configuration `protobuf_oneof:"configuration"`
	ThrottleHz    *wrappers.DoubleValue               `protobuf:"bytes,8,opt,name=throttle_hz,json=throttleHz,proto3" json:"throttle_hz,omitempty"`
	Disabled      *wrappers.BoolValue                 `protobuf:"bytes,19,opt,name=disabled,proto3" json:"disabled,omitempty"`
	OnDemand      *wrappers.BoolValue                 `protobuf:"bytes,20,opt,name=on_demand,json=onDemand,proto3" json:"on_demand,omitempty"`
	Transform     *StreamTransformConfiguration       `protobuf:"bytes,21,opt,name=transform,proto3" json:"transform,omitempty"`
	Quality       string                              `protobuf:"bytes,22,opt,name=quality,proto3" json:"quality,omitempty"`
}

func (x *StreamConfiguration) Reset() {
	*x = StreamConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamConfiguration) ProtoMessage() {}

func (x *StreamConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamConfiguration.ProtoReflect.Descriptor instead.
func (*StreamConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{15}
}

func (x *StreamConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StreamConfiguration) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (m *StreamConfiguration) GetConfiguration() isStreamConfiguration_Configuration {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (x *StreamConfiguration) GetRosTopic() *ROSTopic {
	if x, ok := x.GetConfiguration().(*StreamConfiguration_RosTopic); ok {
		return x.RosTopic
	}
	return nil
}

func (x *StreamConfiguration) GetRosLocalization() *ROSLocalization {
	if x, ok := x.GetConfiguration().(*StreamConfiguration_RosLocalization); ok {
		return x.RosLocalization
	}
	return nil
}

func (x *StreamConfiguration) GetDirectoryWatch() *DirectoryWatch {
	if x, ok := x.GetConfiguration().(*StreamConfiguration_DirectoryWatch); ok {
		return x.DirectoryWatch
	}
	return nil
}

func (x *StreamConfiguration) GetFileTail() *FileTail {
	if x, ok := x.GetConfiguration().(*StreamConfiguration_FileTail); ok {
		return x.FileTail
	}
	return nil
}

func (x *StreamConfiguration) GetRosTransformTree() *ROSTransformTree {
	if x, ok := x.GetConfiguration().(*StreamConfiguration_RosTransformTree); ok {
		return x.RosTransformTree
	}
	return nil
}

func (x *StreamConfiguration) GetCustom() *Custom {
	if x, ok := x.GetConfiguration().(*StreamConfiguration_Custom); ok {
		return x.Custom
	}
	return nil
}

func (x *StreamConfiguration) GetHardware() *Hardware {
	if x, ok := x.GetConfiguration().(*StreamConfiguration_Hardware); ok {
		return x.Hardware
	}
	return nil
}

func (x *StreamConfiguration) GetThrottleHz() *wrappers.DoubleValue {
	if x != nil {
		return x.ThrottleHz
	}
	return nil
}

func (x *StreamConfiguration) GetDisabled() *wrappers.BoolValue {
	if x != nil {
		return x.Disabled
	}
	return nil
}

func (x *StreamConfiguration) GetOnDemand() *wrappers.BoolValue {
	if x != nil {
		return x.OnDemand
	}
	return nil
}

func (x *StreamConfiguration) GetTransform() *StreamTransformConfiguration {
	if x != nil {
		return x.Transform
	}
	return nil
}

func (x *StreamConfiguration) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

type isStreamConfiguration_Configuration interface {
	isStreamConfiguration_Configuration()
}

type StreamConfiguration_RosTopic struct {
	RosTopic *ROSTopic `protobuf:"bytes,3,opt,name=ros_topic,json=rosTopic,proto3,oneof"`
}

type StreamConfiguration_RosLocalization struct {
	RosLocalization *ROSLocalization `protobuf:"bytes,4,opt,name=ros_localization,json=rosLocalization,proto3,oneof"`
}

type StreamConfiguration_DirectoryWatch struct {
	DirectoryWatch *DirectoryWatch `protobuf:"bytes,5,opt,name=directory_watch,json=directoryWatch,proto3,oneof"`
}

type StreamConfiguration_FileTail struct {
	FileTail *FileTail `protobuf:"bytes,6,opt,name=file_tail,json=fileTail,proto3,oneof"`
}

type StreamConfiguration_RosTransformTree struct {
	RosTransformTree *ROSTransformTree `protobuf:"bytes,7,opt,name=ros_transform_tree,json=rosTransformTree,proto3,oneof"`
}

type StreamConfiguration_Custom struct {
	Custom *Custom `protobuf:"bytes,9,opt,name=custom,proto3,oneof"`
}

type StreamConfiguration_Hardware struct {
	Hardware *Hardware `protobuf:"bytes,10,opt,name=hardware,proto3,oneof"`
}

func (*StreamConfiguration_RosTopic) isStreamConfiguration_Configuration() {}

func (*StreamConfiguration_RosLocalization) isStreamConfiguration_Configuration() {}

func (*StreamConfiguration_DirectoryWatch) isStreamConfiguration_Configuration() {}

func (*StreamConfiguration_FileTail) isStreamConfiguration_Configuration() {}

func (*StreamConfiguration_RosTransformTree) isStreamConfiguration_Configuration() {}

func (*StreamConfiguration_Custom) isStreamConfiguration_Configuration() {}

func (*StreamConfiguration_Hardware) isStreamConfiguration_Configuration() {}

type StreamTransformConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoEncodingEnabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=video_encoding_enabled,json=videoEncodingEnabled,proto3" json:"video_encoding_enabled,omitempty"`
}

func (x *StreamTransformConfiguration) Reset() {
	*x = StreamTransformConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamTransformConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTransformConfiguration) ProtoMessage() {}

func (x *StreamTransformConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTransformConfiguration.ProtoReflect.Descriptor instead.
func (*StreamTransformConfiguration) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{16}
}

func (x *StreamTransformConfiguration) GetVideoEncodingEnabled() *wrappers.BoolValue {
	if x != nil {
		return x.VideoEncodingEnabled
	}
	return nil
}

type BlobData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BlobData) Reset() {
	*x = BlobData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobData) ProtoMessage() {}

func (x *BlobData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobData.ProtoReflect.Descriptor instead.
func (*BlobData) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{17}
}

func (x *BlobData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Diagnostics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportLogs    *wrappers.BoolValue `protobuf:"bytes,1,opt,name=report_logs,json=reportLogs,proto3" json:"report_logs,omitempty"`
	ReportMetrics *wrappers.BoolValue `protobuf:"bytes,2,opt,name=report_metrics,json=reportMetrics,proto3" json:"report_metrics,omitempty"`
}

func (x *Diagnostics) Reset() {
	*x = Diagnostics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diagnostics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnostics) ProtoMessage() {}

func (x *Diagnostics) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnostics.ProtoReflect.Descriptor instead.
func (*Diagnostics) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{18}
}

func (x *Diagnostics) GetReportLogs() *wrappers.BoolValue {
	if x != nil {
		return x.ReportLogs
	}
	return nil
}

func (x *Diagnostics) GetReportMetrics() *wrappers.BoolValue {
	if x != nil {
		return x.ReportMetrics
	}
	return nil
}

type Custom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Custom) Reset() {
	*x = Custom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Custom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Custom) ProtoMessage() {}

func (x *Custom) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Custom.ProtoReflect.Descriptor instead.
func (*Custom) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{19}
}

type Hardware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HwDescriptor       string `protobuf:"bytes,1,opt,name=hw_descriptor,json=hwDescriptor,proto3" json:"hw_descriptor,omitempty"`
	AudioHwDescriptor  string `protobuf:"bytes,3,opt,name=audio_hw_descriptor,json=audioHwDescriptor,proto3" json:"audio_hw_descriptor,omitempty"`
	HardwareType       string `protobuf:"bytes,4,opt,name=hardware_type,json=hardwareType,proto3" json:"hardware_type,omitempty"`
	RtspEncodingNeeded bool   `protobuf:"varint,5,opt,name=rtsp_encoding_needed,json=rtspEncodingNeeded,proto3" json:"rtsp_encoding_needed,omitempty"`
	IsOnvif            bool   `protobuf:"varint,6,opt,name=is_onvif,json=isOnvif,proto3" json:"is_onvif,omitempty"`
	IpCamUsername      string `protobuf:"bytes,7,opt,name=ip_cam_username,json=ipCamUsername,proto3" json:"ip_cam_username,omitempty"`
	IpCamPassword      string `protobuf:"bytes,8,opt,name=ip_cam_password,json=ipCamPassword,proto3" json:"ip_cam_password,omitempty"`
}

func (x *Hardware) Reset() {
	*x = Hardware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hardware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hardware) ProtoMessage() {}

func (x *Hardware) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hardware.ProtoReflect.Descriptor instead.
func (*Hardware) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{20}
}

func (x *Hardware) GetHwDescriptor() string {
	if x != nil {
		return x.HwDescriptor
	}
	return ""
}

func (x *Hardware) GetAudioHwDescriptor() string {
	if x != nil {
		return x.AudioHwDescriptor
	}
	return ""
}

func (x *Hardware) GetHardwareType() string {
	if x != nil {
		return x.HardwareType
	}
	return ""
}

func (x *Hardware) GetRtspEncodingNeeded() bool {
	if x != nil {
		return x.RtspEncodingNeeded
	}
	return false
}

func (x *Hardware) GetIsOnvif() bool {
	if x != nil {
		return x.IsOnvif
	}
	return false
}

func (x *Hardware) GetIpCamUsername() string {
	if x != nil {
		return x.IpCamUsername
	}
	return ""
}

func (x *Hardware) GetIpCamPassword() string {
	if x != nil {
		return x.IpCamPassword
	}
	return ""
}

type DirectoryWatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Directory   string   `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
	Extension   string   `protobuf:"bytes,2,opt,name=extension,proto3" json:"extension,omitempty"`
	FileType    FileType `protobuf:"varint,3,opt,name=file_type,json=fileType,proto3,enum=v1.model.FileType" json:"file_type,omitempty"`
	RemoteAgent bool     `protobuf:"varint,4,opt,name=remote_agent,json=remoteAgent,proto3" json:"remote_agent,omitempty"`
}

func (x *DirectoryWatch) Reset() {
	*x = DirectoryWatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectoryWatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryWatch) ProtoMessage() {}

func (x *DirectoryWatch) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryWatch.ProtoReflect.Descriptor instead.
func (*DirectoryWatch) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{21}
}

func (x *DirectoryWatch) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *DirectoryWatch) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *DirectoryWatch) GetFileType() FileType {
	if x != nil {
		return x.FileType
	}
	return FileType_FILE
}

func (x *DirectoryWatch) GetRemoteAgent() bool {
	if x != nil {
		return x.RemoteAgent
	}
	return false
}

type FileTail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename   string     `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	FileFormat FileFormat `protobuf:"varint,2,opt,name=file_format,json=fileFormat,proto3,enum=v1.model.FileFormat" json:"file_format,omitempty"`
	TimeKey    string     `protobuf:"bytes,3,opt,name=time_key,json=timeKey,proto3" json:"time_key,omitempty"`
	TimeFormat string     `protobuf:"bytes,4,opt,name=time_format,json=timeFormat,proto3" json:"time_format,omitempty"`
	Regex      string     `protobuf:"bytes,5,opt,name=regex,proto3" json:"regex,omitempty"`
}

func (x *FileTail) Reset() {
	*x = FileTail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_model_v1_config_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTail) ProtoMessage() {}

func (x *FileTail) ProtoReflect() protoreflect.Message {
	mi := &file_protos_model_v1_config_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTail.ProtoReflect.Descriptor instead.
func (*FileTail) Descriptor() ([]byte, []int) {
	return file_protos_model_v1_config_proto_rawDescGZIP(), []int{22}
}

func (x *FileTail) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileTail) GetFileFormat() FileFormat {
	if x != nil {
		return x.FileFormat
	}
	return FileFormat_PLAIN_TEXT
}

func (x *FileTail) GetTimeKey() string {
	if x != nil {
		return x.TimeKey
	}
	return ""
}

func (x *FileTail) GetTimeFormat() string {
	if x != nil {
		return x.TimeFormat
	}
	return ""
}

func (x *FileTail) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

var File_protos_model_v1_config_proto protoreflect.FileDescriptor

var file_protos_model_v1_config_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x74, 0x22, 0x47, 0x0a, 0x0f, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x65, 0x6c, 0x65, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x74, 0x65,
	0x6c, 0x65, 0x6f, 0x70, 0x22, 0x7a, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0xaa, 0x02, 0x0a, 0x1a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x3e, 0x0a,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x35, 0x0a,
	0x06, 0x74, 0x65, 0x6c, 0x65, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6f, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x74, 0x65,
	0x6c, 0x65, 0x6f, 0x70, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x76, 0x0a,
	0x14, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xda, 0x01, 0x0a, 0x13, 0x54, 0x65, 0x6c, 0x65, 0x6f, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x0d, 0x63, 0x6d, 0x64, 0x5f, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6d, 0x64, 0x56, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x47, 0x0a, 0x0b, 0x72, 0x6f, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6f, 0x70, 0x52, 0x6f, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x72, 0x6f, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x68, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x54, 0x65, 0x6c, 0x65, 0x6f, 0x70, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x22, 0x53, 0x0a, 0x1b, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xcf, 0x02, 0x0a, 0x1c, 0x54, 0x65, 0x6c, 0x65,
	0x6f, 0x70, 0x52, 0x6f, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x4f, 0x53, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6f, 0x70, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0xd8, 0x02, 0x0a, 0x21, 0x54, 0x65,
	0x6c, 0x65, 0x6f, 0x70, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x74, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x74,
	0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6f, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x77, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x77,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x74, 0x73,
	0x70, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x72, 0x74, 0x73, 0x70, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x6f, 0x6e, 0x76, 0x69, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x4f, 0x6e, 0x76, 0x69, 0x66, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x63, 0x61, 0x6d,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x43, 0x61,
	0x6d, 0x55, 0x72, 0x6c, 0x22, 0xc4, 0x01, 0x0a, 0x1f, 0x54, 0x65, 0x6c, 0x65, 0x6f, 0x70, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x72, 0x74, 0x63, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x74, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x65,
	0x6c, 0x65, 0x6f, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x7f, 0x0a, 0x16, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x2c,
	0x0a, 0x03, 0x72, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x4f, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x72, 0x6f, 0x73, 0x22, 0xc6, 0x01, 0x0a,
	0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x65, 0x0a, 0x11, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70,
	0x1a, 0x43, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2f, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x69, 0x73,
	0x6b, 0x12, 0x4a, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x68, 0x72, 0x6f,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x68, 0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x7a, 0x22, 0x67, 0x0a,
	0x11, 0x44, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x12, 0x6f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4b, 0x0a, 0x10, 0x52, 0x4f, 0x53, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x18, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x22, 0xdd, 0x06, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x3b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x31, 0x0a, 0x09,
	0x72, 0x6f, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x4f, 0x53, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x48, 0x00, 0x52, 0x08, 0x72, 0x6f, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x46, 0x0a, 0x10, 0x72, 0x6f, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x4f, 0x53, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0f, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x31, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54,
	0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x61, 0x69, 0x6c, 0x12,
	0x4a, 0x0a, 0x12, 0x72, 0x6f, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x4f, 0x53, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x72, 0x65, 0x65, 0x48, 0x00, 0x52, 0x10, 0x72, 0x6f, 0x73, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x72, 0x65, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x48, 0x00, 0x52,
	0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x74, 0x68, 0x72,
	0x6f, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x68, 0x7a, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x74, 0x68,
	0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x7a, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x37, 0x0a, 0x09, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x08, 0x6f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x44, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x1c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x16, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x14, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x1e, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x62, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x0b, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f,
	0x67, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x08, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22,
	0xa1, 0x02, 0x0a, 0x08, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x68, 0x77, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x77, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x68, 0x77, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x48, 0x77, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x74, 0x73, 0x70, 0x5f, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x72, 0x74, 0x73, 0x70, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6f,
	0x6e, 0x76, 0x69, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4f, 0x6e,
	0x76, 0x69, 0x66, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x70, 0x5f, 0x63, 0x61, 0x6d, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x70,
	0x43, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69,
	0x70, 0x5f, 0x63, 0x61, 0x6d, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x70, 0x43, 0x61, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54,
	0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x2a, 0x26, 0x0a, 0x0a, 0x54, 0x65, 0x6c, 0x65,
	0x6f, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e,
	0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x42, 0x53, 0x45, 0x52, 0x56, 0x45, 0x10, 0x01,
	0x2a, 0x26, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x0e,
	0x0a, 0x0a, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01, 0x2a, 0x3b, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x4f, 0x49,
	0x4e, 0x54, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49,
	0x44, 0x45, 0x4f, 0x10, 0x05, 0x42, 0x11, 0x5a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_model_v1_config_proto_rawDescOnce sync.Once
	file_protos_model_v1_config_proto_rawDescData = file_protos_model_v1_config_proto_rawDesc
)

func file_protos_model_v1_config_proto_rawDescGZIP() []byte {
	file_protos_model_v1_config_proto_rawDescOnce.Do(func() {
		file_protos_model_v1_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_model_v1_config_proto_rawDescData)
	})
	return file_protos_model_v1_config_proto_rawDescData
}

var file_protos_model_v1_config_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protos_model_v1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_protos_model_v1_config_proto_goTypes = []any{
	(TeleopMode)(0),                           // 0: v1.model.TeleopMode
	(FileFormat)(0),                           // 1: v1.model.FileFormat
	(FileType)(0),                             // 2: v1.model.FileType
	(*AgentConfigurationStore)(nil),           // 3: v1.model.AgentConfigurationStore
	(*AgentFeatureSet)(nil),                   // 4: v1.model.AgentFeatureSet
	(*AgentConfiguration)(nil),                // 5: v1.model.AgentConfiguration
	(*AgentConfigurationDocument)(nil),        // 6: v1.model.AgentConfigurationDocument
	(*AdapterConfiguration)(nil),              // 7: v1.model.AdapterConfiguration
	(*TeleopConfiguration)(nil),               // 8: v1.model.TeleopConfiguration
	(*PortForwardingConfiguration)(nil),       // 9: v1.model.PortForwardingConfiguration
	(*TeleopRosStreamConfiguration)(nil),      // 10: v1.model.TeleopRosStreamConfiguration
	(*TeleopHardwareStreamConfiguration)(nil), // 11: v1.model.TeleopHardwareStreamConfiguration
	(*TeleopCustomStreamConfiguration)(nil),   // 12: v1.model.TeleopCustomStreamConfiguration
	(*TelemetryConfiguration)(nil),            // 13: v1.model.TelemetryConfiguration
	(*ApplicationConfiguration)(nil),          // 14: v1.model.ApplicationConfiguration
	(*ResourcesConfiguration)(nil),            // 15: v1.model.ResourcesConfiguration
	(*DiskConfiguration)(nil),                 // 16: v1.model.DiskConfiguration
	(*ROSConfiguration)(nil),                  // 17: v1.model.ROSConfiguration
	(*StreamConfiguration)(nil),               // 18: v1.model.StreamConfiguration
	(*StreamTransformConfiguration)(nil),      // 19: v1.model.StreamTransformConfiguration
	(*BlobData)(nil),                          // 20: v1.model.BlobData
	(*Diagnostics)(nil),                       // 21: v1.model.Diagnostics
	(*Custom)(nil),                            // 22: v1.model.Custom
	(*Hardware)(nil),                          // 23: v1.model.Hardware
	(*DirectoryWatch)(nil),                    // 24: v1.model.DirectoryWatch
	(*FileTail)(nil),                          // 25: v1.model.FileTail
	nil,                                       // 26: v1.model.AgentConfigurationDocument.TagsEntry
	nil,                                       // 27: v1.model.ApplicationConfiguration.ConfigurationMapEntry
	nil,                                       // 28: v1.model.StreamConfiguration.TagsEntry
	(*wrappers.BoolValue)(nil),                // 29: google.protobuf.BoolValue
	(ROSTopicType)(0),                         // 30: v1.model.ROSTopicType
	(*wrappers.DoubleValue)(nil),              // 31: google.protobuf.DoubleValue
	(*ROSTopic)(nil),                          // 32: v1.model.ROSTopic
	(*ROSLocalization)(nil),                   // 33: v1.model.ROSLocalization
	(*ROSTransformTree)(nil),                  // 34: v1.model.ROSTransformTree
}
var file_protos_model_v1_config_proto_depIdxs = []int32{
	6,  // 0: v1.model.AgentConfiguration.document:type_name -> v1.model.AgentConfigurationDocument
	26, // 1: v1.model.AgentConfigurationDocument.tags:type_name -> v1.model.AgentConfigurationDocument.TagsEntry
	13, // 2: v1.model.AgentConfigurationDocument.telemetry:type_name -> v1.model.TelemetryConfiguration
	8,  // 3: v1.model.AgentConfigurationDocument.teleop:type_name -> v1.model.TeleopConfiguration
	10, // 4: v1.model.TeleopConfiguration.ros_streams:type_name -> v1.model.TeleopRosStreamConfiguration
	11, // 5: v1.model.TeleopConfiguration.hardware_streams:type_name -> v1.model.TeleopHardwareStreamConfiguration
	29, // 6: v1.model.PortForwardingConfiguration.enabled:type_name -> google.protobuf.BoolValue
	30, // 7: v1.model.TeleopRosStreamConfiguration.topic_type:type_name -> v1.model.ROSTopicType
	0,  // 8: v1.model.TeleopRosStreamConfiguration.mode:type_name -> v1.model.TeleopMode
	0,  // 9: v1.model.TeleopHardwareStreamConfiguration.mode:type_name -> v1.model.TeleopMode
	0,  // 10: v1.model.TeleopCustomStreamConfiguration.mode:type_name -> v1.model.TeleopMode
	18, // 11: v1.model.TelemetryConfiguration.streams:type_name -> v1.model.StreamConfiguration
	17, // 12: v1.model.TelemetryConfiguration.ros:type_name -> v1.model.ROSConfiguration
	27, // 13: v1.model.ApplicationConfiguration.configuration_map:type_name -> v1.model.ApplicationConfiguration.ConfigurationMapEntry
	16, // 14: v1.model.ResourcesConfiguration.disk:type_name -> v1.model.DiskConfiguration
	31, // 15: v1.model.ResourcesConfiguration.stream_throttle_hz:type_name -> google.protobuf.DoubleValue
	28, // 16: v1.model.StreamConfiguration.tags:type_name -> v1.model.StreamConfiguration.TagsEntry
	32, // 17: v1.model.StreamConfiguration.ros_topic:type_name -> v1.model.ROSTopic
	33, // 18: v1.model.StreamConfiguration.ros_localization:type_name -> v1.model.ROSLocalization
	24, // 19: v1.model.StreamConfiguration.directory_watch:type_name -> v1.model.DirectoryWatch
	25, // 20: v1.model.StreamConfiguration.file_tail:type_name -> v1.model.FileTail
	34, // 21: v1.model.StreamConfiguration.ros_transform_tree:type_name -> v1.model.ROSTransformTree
	22, // 22: v1.model.StreamConfiguration.custom:type_name -> v1.model.Custom
	23, // 23: v1.model.StreamConfiguration.hardware:type_name -> v1.model.Hardware
	31, // 24: v1.model.StreamConfiguration.throttle_hz:type_name -> google.protobuf.DoubleValue
	29, // 25: v1.model.StreamConfiguration.disabled:type_name -> google.protobuf.BoolValue
	29, // 26: v1.model.StreamConfiguration.on_demand:type_name -> google.protobuf.BoolValue
	19, // 27: v1.model.StreamConfiguration.transform:type_name -> v1.model.StreamTransformConfiguration
	29, // 28: v1.model.StreamTransformConfiguration.video_encoding_enabled:type_name -> google.protobuf.BoolValue
	29, // 29: v1.model.Diagnostics.report_logs:type_name -> google.protobuf.BoolValue
	29, // 30: v1.model.Diagnostics.report_metrics:type_name -> google.protobuf.BoolValue
	2,  // 31: v1.model.DirectoryWatch.file_type:type_name -> v1.model.FileType
	1,  // 32: v1.model.FileTail.file_format:type_name -> v1.model.FileFormat
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_protos_model_v1_config_proto_init() }
func file_protos_model_v1_config_proto_init() {
	if File_protos_model_v1_config_proto != nil {
		return
	}
	file_protos_model_v1_ros_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_model_v1_config_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AgentConfigurationStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AgentFeatureSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AgentConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AgentConfigurationDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AdapterConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TeleopConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PortForwardingConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TeleopRosStreamConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TeleopHardwareStreamConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TeleopCustomStreamConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TelemetryConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ApplicationConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ResourcesConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DiskConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ROSConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*StreamConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*StreamTransformConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*BlobData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Diagnostics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*Custom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Hardware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*DirectoryWatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_model_v1_config_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*FileTail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_model_v1_config_proto_msgTypes[15].OneofWrappers = []any{
		(*StreamConfiguration_RosTopic)(nil),
		(*StreamConfiguration_RosLocalization)(nil),
		(*StreamConfiguration_DirectoryWatch)(nil),
		(*StreamConfiguration_FileTail)(nil),
		(*StreamConfiguration_RosTransformTree)(nil),
		(*StreamConfiguration_Custom)(nil),
		(*StreamConfiguration_Hardware)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_model_v1_config_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_model_v1_config_proto_goTypes,
		DependencyIndexes: file_protos_model_v1_config_proto_depIdxs,
		EnumInfos:         file_protos_model_v1_config_proto_enumTypes,
		MessageInfos:      file_protos_model_v1_config_proto_msgTypes,
	}.Build()
	File_protos_model_v1_config_proto = out.File
	file_protos_model_v1_config_proto_rawDesc = nil
	file_protos_model_v1_config_proto_goTypes = nil
	file_protos_model_v1_config_proto_depIdxs = nil
}
